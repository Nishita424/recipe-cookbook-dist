{"version":3,"sources":["./src/app/shared/dropdown.directive.ts","./src/app/shared/ingredient.model.ts","./src/environments/environment.ts","./src/app/recipes/recipe-resolver.service.ts","./src/app/shared/data-storage.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/recipes/recipe-list/recipe-item/recipe-item.component.ts","./src/app/recipes/recipe-list/recipe-item/recipe-item.component.html","./src/app/shopping-list/shopping-edit/shopping-edit.component.ts","./src/app/shopping-list/shopping-edit/shopping-edit.component.html","./src/app/app.module.ts","./src/app/recipes/recipe.service.ts","./src/app/recipes/recipe.model.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/recipes/recipe-details/recipe-details.component.ts","./src/app/recipes/recipe-details/recipe-details.component.html","./src/app/recipes/recipes.component.ts","./src/app/recipes/recipes.component.html","./src/app/shopping-list/shopping-list.service.ts","./src/app/recipes/recipe-list/recipe-list.component.ts","./src/app/recipes/recipe-list/recipe-list.component.html","./src/app/recipe-start/recipe-start.component.ts","./src/app/recipe-start/recipe-start.component.html","./src/app/shopping-list/shopping-list.component.ts","./src/app/shopping-list/shopping-list.component.html","./src/app/app-routing.module.ts","./src/app/recipes/recipe-edit/recipe-edit.component.ts","./src/app/recipes/recipe-edit/recipe-edit.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Directive, HostListener, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[appDropdown]',\n})\nexport class DropdownDirective {\n  // HostBinding sets the class-open to the element this directive is applied on.\n  @HostBinding('class.open') isOpen = false;\n\n  constructor() {}\n\n  @HostListener('click') toggleOpen() {\n    this.isOpen = !this.isOpen;\n  }\n}\n","// export class Ingredient {\n//     public name: string;\n//     public amount: number;\n\n//     constructor(name: string, amount: number){\n//         this.name = name;\n//         this.amount = amount;\n//     }\n// }\n\nexport class Ingredient {\n  constructor(public name: string, public amount: number) {}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport {\n  Resolve,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n} from '@angular/router';\n\nimport { Recipe } from '../recipes/recipe.model';\n\nimport { DataStorageService } from '../shared/data-storage.service';\nimport { RecipeService } from '../recipes/recipe.service';\n\n@Injectable({ providedIn: 'root' })\nexport class RecipeResolverService implements Resolve<Recipe[]> {\n  constructor(\n    private dataStorageService: DataStorageService,\n    private recipeService: RecipeService\n  ) {}\n\n  resolve(router: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const existingRecipes = this.recipeService.getRecipes();\n    if (existingRecipes.length < 1) {\n      return this.dataStorageService.fetchRecipes();\n    } else {\n      return existingRecipes;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, tap } from 'rxjs/operators';\n\nimport { Recipe } from '../recipes/recipe.model';\n\nimport { RecipeService } from '../recipes/recipe.service';\n\n@Injectable({ providedIn: 'root' })\nexport class DataStorageService {\n  constructor(\n    private http: HttpClient,\n    private recipesService: RecipeService\n  ) {}\n\n  storeRecipes() {\n    const recipes = this.recipesService.getRecipes();\n    return this.http\n      .put(\n        'https://ng-recipe-cookbook-app.firebaseio.com/recipes.json',\n        recipes\n      )\n      .subscribe((responseData) => {\n        console.log(responseData);\n      });\n  }\n\n  fetchRecipes() {\n    return (\n      this.http\n        .get<Recipe[]>(\n          'https://ng-recipe-cookbook-app.firebaseio.com/recipes.json'\n        )\n        // To protect code from errors incase new recipe added do not have ingredients[]\n        .pipe(\n          // rxjs operator map\n          map((recipes) => {\n            // Array map\n            return recipes.map((recipe) => {\n              return {\n                ...recipe,\n                ingredients: recipe.ingredients ? recipe.ingredients : [],\n              };\n            });\n          }),\n          tap((recipes) => {\n            this.recipesService.setRecipes(recipes);\n          })\n        )\n    );\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  // title = 'recipe-cookbook';\n  // loadedFeature: string = 'recipe';\n  // onNavigate(feature: string) {\n  //   this.loadedFeature = feature;\n  // }\n}\n","<!-- <app-header (featureSelected)=\"onNavigate($event)\"></app-header> -->\n<app-header></app-header>\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <!-- <app-recipes *ngIf=\"loadedFeature === 'recipe'\"></app-recipes>\n      <app-shopping-list *ngIf=\"loadedFeature !== 'recipe'\"></app-shopping-list> -->\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { Recipe } from '../../recipe.model';\n\n@Component({\n  selector: 'app-recipe-item',\n  templateUrl: './recipe-item.component.html',\n  styleUrls: ['./recipe-item.component.css'],\n})\nexport class RecipeItemComponent implements OnInit {\n  @Input() recipe: Recipe;\n  @Input() id: number;\n\n  ngOnInit(): void {}\n\n}\n","<a\n  routerLinkActive=\"active\"\n  [routerLink]=\"[id]\"\n  class=\"list-group-item clearfix\"\n  style=\"cursor: pointer; margin-bottom: 1rem\">\n  <div class=\"pull-left\">\n    <h4 class=\"list-group-item-heading\">{{ recipe.name }}</h4>\n    <p class=\"list-group-item-text\">{{ recipe.description }}</p>\n  </div>\n  <span class=\"pull-right\">\n    <img\n      [src]=\"recipe.imagePath\"\n      alt=\"{{ recipe.name }}\"\n      class=\"img-responsive\"\n      style=\"max-height: 7rem; width: 11rem;\"\n      />\n  </span>\n</a>\n","import { NgForm } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Ingredient } from 'src/app/shared/ingredient.model';\nimport { ShoppingListService } from '../shopping-list.service';\n\n@Component({\n  selector: 'app-shopping-edit',\n  templateUrl: './shopping-edit.component.html',\n  styleUrls: ['./shopping-edit.component.css'],\n})\nexport class ShoppingEditComponent implements OnInit, OnDestroy {\n  subscription: Subscription;\n  editMode: boolean = false;\n  editedIngredientIndex: number;\n  editedItem: Ingredient;\n  @ViewChild('f') shoppingListForm: NgForm;\n\n  constructor(private shoppingListService: ShoppingListService) {}\n\n  ngOnInit(): void {\n    this.subscription = this.shoppingListService.startedEditing.subscribe(\n      (index: number) => {\n        this.editMode = true;\n        this.editedIngredientIndex = index;\n        this.editedItem = this.shoppingListService.getIngredient(index);\n        this.shoppingListForm.setValue({\n          name: this.editedItem.name,\n          amount: this.editedItem.amount,\n        });\n      }\n    );\n  }\n\n  onSubmitList(form: NgForm) {\n    const value = form.value;\n    const newIngredient = new Ingredient(value.name, value.amount);\n\n    if (this.editMode) {\n      this.shoppingListService.updateIngredient(\n        newIngredient,\n        this.editedIngredientIndex\n      );\n      this.editMode = false;\n    } else {\n      this.shoppingListService.addIngredient(newIngredient);\n    }\n    this.shoppingListForm.reset();\n  }\n\n  onClear() {\n    this.shoppingListForm.reset();\n    this.editMode = false;\n  }\n\n  onDelete() {\n    this.shoppingListService.deleteIngredient(this.editedIngredientIndex);\n    this.onClear();\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <form (ngSubmit)=\"onSubmitList(f)\" #f=\"ngForm\">\n      <div class=\"row\">\n        <div class=\"col-sm-5 form-group\">\n          <label for=\"name\" style=\"margin-bottom: 1rem\">Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            class=\"form-control\"\n            name=\"name\"\n            ngModel\n            required\n          />\n        </div>\n        <div class=\"col-sm-2 form-group\">\n          <label for=\"amount\" style=\"margin-bottom: 1rem\">Amount</label>\n          <input\n            type=\"number\"\n            id=\"amount\"\n            class=\"form-control\"\n            name=\"amount\"\n            ngModel\n            required\n            [pattern]=\"'^[1-9]+[0-9]*$'\"\n          />\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <button\n            class=\"btn btn-success\"\n            type=\"submit\"\n            [disabled]=\"!f.valid\"\n            style=\"margin-right: 1rem\"\n          >\n            {{ !editMode ? \"Add\" : \"Update\" }}\n          </button>\n          <button\n            *ngIf=\"editMode\"\n            class=\"btn btn-danger\"\n            type=\"button\"\n            (click)=\"onDelete()\"\n            style=\"margin-right: 1rem\"\n          >\n            Delete\n          </button>\n          <button class=\"btn btn-warning\" type=\"button\" (click)=\"onClear()\">\n            Clear\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RecipesComponent } from './recipes/recipes.component';\nimport { RecipeListComponent } from './recipes/recipe-list/recipe-list.component';\nimport { RecipeItemComponent } from './recipes/recipe-list/recipe-item/recipe-item.component';\nimport { RecipeDetailsComponent } from './recipes/recipe-details/recipe-details.component';\nimport { HeaderComponent } from './header/header.component';\nimport { ShoppingListComponent } from './shopping-list/shopping-list.component';\nimport { ShoppingEditComponent } from './shopping-list/shopping-edit/shopping-edit.component';\nimport { DropdownDirective } from './shared/dropdown.directive';\nimport { ShoppingListService } from './shopping-list/shopping-list.service';\nimport { RecipeStartComponent } from './recipe-start/recipe-start.component';\nimport { RecipeEditComponent } from './recipes/recipe-edit/recipe-edit.component';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RecipeService } from './recipes/recipe.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RecipesComponent,\n    RecipeListComponent,\n    RecipeItemComponent,\n    RecipeDetailsComponent,\n    HeaderComponent,\n    ShoppingListComponent,\n    ShoppingEditComponent,\n    DropdownDirective,\n    RecipeStartComponent,\n    RecipeEditComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [ShoppingListService, RecipeService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { Recipe } from '../recipes/recipe.model';\nimport { Ingredient } from '../shared/ingredient.model';\nimport { ShoppingListService } from '../shopping-list/shopping-list.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RecipeService {\n  recipesChanged = new Subject<Recipe[]>();\n\n  private recipes: Recipe[] = [\n    // new Recipe(\n    //   'Cheese Burger',\n    //   'King size burger with extra cheese and spice',\n    //   'https://images.pexels.com/photos/1639557/pexels-photo-1639557.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n    //   [new Ingredient('Chicken', 2), new Ingredient('Tomatoes', 4)]\n    // ),\n    // new Recipe(\n    //   'French Fries',\n    //   'Trendy french fries',\n    //   'https://images.pexels.com/photos/1893555/pexels-photo-1893555.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500',\n    //   [new Ingredient('Potatoes', 10), new Ingredient('Tomato sauce', 7)]\n    // ),\n    // new Recipe(\n    //   'Mushroom Pasta',\n    //   'Cheesy veg pasta with white sauce',\n    //   'https://images.pexels.com/photos/1438672/pexels-photo-1438672.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\n    //   [new Ingredient('Mushroom', 10), new Ingredient('Raw pasta', 20)]\n    // ),\n  ];\n\n  getRecipes() {\n    // This may allow outside components to change this array. So we will send a copy instead\n    // return this.recipes;\n    return this.recipes.slice();\n  }\n\n  getRecipe(id: number) {\n    return this.recipes.slice()[id];\n  }\n\n  constructor(private sLService: ShoppingListService) {}\n\n  addToShoppingList(ingredients: Ingredient[]) {\n    this.sLService.addIngredients(ingredients);\n  }\n\n  removeFromShoppingList(ingredients: Ingredient[]) {\n    this.sLService.removeIngredients(ingredients);\n  }\n\n  addRecipe(recipe: Recipe) {\n    this.recipes.push(recipe);\n    this.recipesChanged.next(this.recipes.slice());\n  }\n\n  updateRecipe(index: number, newRecipe: Recipe) {\n    this.recipes[index] = newRecipe;\n    this.recipesChanged.next(this.recipes.slice());\n  }\n\n  deleteRecipe(index: number) {\n    this.recipes.splice(index, 1);\n    this.recipesChanged.next(this.recipes.slice());\n  }\n\n  setRecipes(recipes: Recipe[]) {\n    // Overriding the recipes in our app with recipes just fetched\n    this.recipes = recipes;\n    this.recipesChanged.next(this.recipes.slice());\n  }\n}\n","import { Ingredient } from '../shared/ingredient.model';\n\nexport class Recipe {\n  public name: string;\n  public description: string;\n  public imagePath: string;\n  public ingredients: Ingredient[];\n\n  constructor(\n    name: string,\n    description: string,\n    imagePath: string,\n    ingredients: Ingredient[]\n  ) {\n    this.name = name;\n    this.description = description;\n    this.imagePath = imagePath;\n    this.ingredients = ingredients;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { DataStorageService } from '../shared/data-storage.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css'],\n})\nexport class HeaderComponent implements OnInit {\n  constructor(private dataStorageService: DataStorageService) {}\n\n  ngOnInit(): void {}\n\n  onSaveData() {\n    this.dataStorageService.storeRecipes();\n  }\n\n  onFetchData() {\n    this.dataStorageService.fetchRecipes().subscribe();\n  }\n}\n","<nav class=\"navbar navbar-default\">\n  <div class=\"container-fluid\">\n    <div class=\"navbar-header\">\n      <a href=\"#\" class=\"navbar-brand\">Recipe cookbook</a>\n    </div>\n    <div class=\"collapse navbar-collapse\">\n      <ul class=\"nav navbar-nav\">\n        <li routerLinkActive=\"active\">\n          <a routerLink=\"/recipes\">Recipes</a></li>\n        <li routerLinkActive=\"active\">\n          <a [routerLink]=\"['/shopping-list']\">Shopping\n            List</a>\n        </li>\n      </ul>\n      <ul class=\"nav navbar-nav navbar-right\">\n        <li class=\"dropdown\" appDropdown>\n          <a class=\"dropdown-toggle\" role=\"button\">Manage <span\n              class=\"caret\"></span>\n          </a>\n          <ul class=\"dropdown-menu\">\n            <li><a style=\"cursor: pointer;\" (click)=\"onSaveData()\">Save Data</a></li>\n            <li><a style=\"cursor: pointer;\" (click)=\"onFetchData()\">Fetch Data</a></li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n","import { ActivatedRoute, Params, Router } from '@angular/router';\n\nimport { Component, OnInit } from '@angular/core';\nimport { Recipe } from '../recipe.model';\nimport { RecipeService } from '../recipe.service';\n\n@Component({\n  selector: 'app-recipe-details',\n  templateUrl: './recipe-details.component.html',\n  styleUrls: ['./recipe-details.component.css'],\n})\nexport class RecipeDetailsComponent implements OnInit {\n  // @Input() targetRecipe: Recipe;\n  targetRecipe: Recipe;\n  id: number;\n\n  constructor(\n    private recipeService: RecipeService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    // Not apt\n    // const id = this.route.snapshot.params['id'];\n\n    this.route.params.subscribe((params: Params) => {\n      this.id = +params['id']; // casting string id from route to number\n      this.targetRecipe = this.recipeService.getRecipe(this.id);\n    });\n  }\n\n  onAddToShoppingList() {\n    this.recipeService.addToShoppingList(this.targetRecipe.ingredients);\n  }\n\n  onDeleteRecipe() {\n    this.recipeService.deleteRecipe(this.id);\n    this.recipeService.removeFromShoppingList(this.targetRecipe.ingredients);\n\n    this.router.navigate(['/recipes']);\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <img\n      src=\"{{ targetRecipe.imagePath }}\"\n      alt=\"{{ targetRecipe.imagePath }}\"\n      class=\"img-responsive\"\n      style=\"max-height: 300px; width: 60rem;\" />\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <h1>{{ targetRecipe.name }}</h1>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <div class=\"btn-group\" appDropdown>\n      <button\n        type=\"button\"\n        class=\"btn btn-primary dropdown-toggle\"\n        style=\"margin-bottom: 2rem; margin-top: 1rem\">\n        Manage recipe\n        <span class=\"caret\"></span>\n      </button>\n      <ul class=\"dropdown-menu\">\n        <li>\n          <a (click)=\"onAddToShoppingList()\" style=\"cursor: pointer\">To Shopping\n            list</a>\n        </li>\n        <li><a [routerLink]=\"['../', id, 'edit']\">Edit Recipe</a></li>\n        <li><a style=\"cursor: pointer;\" (click)=\"onDeleteRecipe()\">Delete Recipe</a></li>\n      </ul>\n    </div>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col-xs-12\">{{ targetRecipe.description }}</div>\n</div>\n<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <ul class=\"list-group\">\n      <li\n        class=\"list-group-item\"\n        *ngFor=\"let ingredient of targetRecipe.ingredients\"\n        style=\"margin-top: 1rem\">\n        {{ ingredient.name }} - {{ ingredient.amount }}\n      </li>\n    </ul>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { RecipeService } from './recipe.service';\n\n@Component({\n  selector: 'app-recipes',\n  templateUrl: './recipes.component.html',\n  styleUrls: ['./recipes.component.css'],\n  // providers: [RecipeService],\n})\nexport class RecipesComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"row\">\n    <div class=\"col-md-5\">\n        <app-recipe-list>\n        </app-recipe-list>\n    </div>\n    <div class=\"col-md-7\">\n        <!-- <app-recipe-details\n        *ngIf=\"recipeRequested; else infoText\"\n        [targetRecipe]=\"recipeRequested\">\n        </app-recipe-details>\n        <ng-template #infoText>\n            <p>Please select a recipe!</p>\n        </ng-template> -->\n        <router-outlet></router-outlet>\n    </div>\n</div>\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { Ingredient } from '../shared/ingredient.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ShoppingListService {\n  private ingredients: Ingredient[] = [\n    new Ingredient('Morvaldio', 5),\n    new Ingredient('Taurian', 10),\n    new Ingredient('Coriander', 30),\n  ];\n\n  // @Output() newIngredientAdded = new EventEmitter<Ingredient>();\n  // newIngredientAdded = new EventEmitter<Ingredient>();\n  // newIngredientsAdded = new EventEmitter<Ingredient[]>();\n  // Do not use @Output() for subject\n  newIngredientAdded = new Subject<Ingredient>();\n  newIngredientsAdded = new Subject<Ingredient[]>();\n  ingsAfterDeletion = new Subject<Ingredient[]>();\n\n  startedEditing = new Subject<number>();\n\n  constructor() {}\n\n  getIngredients() {\n    return this.ingredients.slice();\n  }\n\n  addIngredient(ingredient: Ingredient) {\n    this.ingredients.push(ingredient);\n    // this.newIngredientAdded.emit(ingredient);\n    this.newIngredientAdded.next(ingredient);\n  }\n\n  addIngredients(ingredients: Ingredient[]) {\n    // downside: we will have to emit for each ingredient\n    // ingredients.forEach((ingredient) => {\n    //   this.addIngredient(ingredient);\n    // });\n    // or bulk insert and emition\n    this.ingredients.push(...ingredients);\n    this.newIngredientsAdded.next(this.ingredients.slice());\n  }\n\n  removeIngredients(ingredients: Ingredient[]) {\n    const indx = this.ingredients.indexOf(ingredients[0]);\n    this.ingredients.splice(indx, ingredients.length);\n    this.ingsAfterDeletion.next(this.ingredients.slice());\n  }\n\n  deleteIngredient(index: number) {\n    this.ingredients.splice(index, 1);\n    this.ingsAfterDeletion.next(this.ingredients.slice());\n  }\n\n  updateIngredient(ingredient: Ingredient, index: number) {\n    this.ingredients[index] = ingredient;\n    this.newIngredientsAdded.next(this.ingredients.slice());\n  }\n\n  getIngredient(index: number) {\n    return this.ingredients[index];\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Recipe } from '../recipe.model';\nimport { RecipeService } from '../recipe.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-recipe-list',\n  templateUrl: './recipe-list.component.html',\n  styleUrls: ['./recipe-list.component.css'],\n})\nexport class RecipeListComponent implements OnInit, OnDestroy {\n  recipes: Recipe[];\n  subscription: Subscription;\n\n  constructor(\n    private recipeService: RecipeService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.recipes = this.recipeService.getRecipes();\n\n    this.subscription = this.recipeService.recipesChanged.subscribe(\n      (recipes) => {\n        this.recipes = recipes;\n      }\n    );\n  }\n\n  // This is programmatic way or do this directly with routerLink=\"new\"\n  onNewRecipe() {\n    this.router.navigate(['new'], { relativeTo: this.route });\n    // Since this is relative path, we need to tell the router about the current path: so inject ActivatedRoute.\n    // Inorder to set navigate to desired path, inject Router\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <button\n      class=\"btn btn-success\"\n      (click)=\"onNewRecipe()\"\n    >New Recipe</button>\n  </div>\n</div>\n<hr />\n<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <app-recipe-item\n      *ngFor=\"let recipeEle of recipes; let i= index;\"\n      [recipe]=\"recipeEle\"\n      [id]=\"i\">\n    </app-recipe-item>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe-start',\n  templateUrl: './recipe-start.component.html',\n  styleUrls: ['./recipe-start.component.css']\n})\nexport class RecipeStartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>Welcome! 😃 Please select a recipe 🥘</h2>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Ingredient } from '../shared/ingredient.model';\nimport { ShoppingListService } from '../shopping-list/shopping-list.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-shopping-list',\n  templateUrl: './shopping-list.component.html',\n  styleUrls: ['./shopping-list.component.css'],\n})\nexport class ShoppingListComponent implements OnInit, OnDestroy {\n  ingredients: Ingredient[];\n  private ingChangeSub: Subscription;\n  private ingsChangeSub: Subscription;\n  private ingsReducedSub: Subscription;\n\n  constructor(private shoppingListService: ShoppingListService) {}\n\n  ngOnInit(): void {\n    this.ingredients = this.shoppingListService.getIngredients();\n\n    this.ingChangeSub = this.shoppingListService.newIngredientAdded.subscribe(\n      (ingredient: Ingredient) => {\n        this.ingredients.push(ingredient);\n      }\n    );\n    this.ingsChangeSub = this.shoppingListService.newIngredientsAdded.subscribe(\n      (ingredients: Ingredient[]) => {\n        this.ingredients = ingredients;\n      }\n    );\n    this.ingsReducedSub = this.shoppingListService.ingsAfterDeletion.subscribe(\n      (ingredients: Ingredient[]) => {\n        this.ingredients = ingredients;\n      }\n    );\n  }\n\n  onEditIngredient(index: number) {\n    this.shoppingListService.startedEditing.next(index);\n  }\n\n  ngOnDestroy(): void {\n    this.ingChangeSub.unsubscribe();\n    this.ingsChangeSub.unsubscribe();\n    this.ingsReducedSub.unsubscribe();\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-xs-10\">\n    <app-shopping-edit></app-shopping-edit>\n    <hr />\n    <ul class=\"list-group\">\n      <a\n        class=\"list-group-item\"\n        style=\"cursor: pointer; margin-bottom: 1rem\"\n        *ngFor=\"let ingredient of ingredients; let i = index\"\n        (click)=\"onEditIngredient(i)\"\n      >\n        {{ ingredient.name }} ({{ ingredient.amount }})\n      </a>\n    </ul>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RecipesComponent } from './recipes/recipes.component';\nimport { ShoppingListComponent } from './shopping-list/shopping-list.component';\nimport { RecipeStartComponent } from './recipe-start/recipe-start.component';\nimport { RecipeDetailsComponent } from './recipes/recipe-details/recipe-details.component';\nimport { RecipeEditComponent } from './recipes/recipe-edit/recipe-edit.component';\nimport { RecipeResolverService } from './recipes/recipe-resolver.service';\n\nconst routes: Routes = [\n  // Redirecting initial page to recipes page, pathMath:full means when entire path is empty\n  { path: '', redirectTo: '/recipes', pathMatch: 'full' },\n  {\n    path: 'recipes',\n    component: RecipesComponent,\n    children: [\n      { path: '', component: RecipeStartComponent },\n      // Since this path is hardcoded, this should come before :id path\n      { path: 'new', component: RecipeEditComponent },\n      {\n        path: ':id/edit',\n        component: RecipeEditComponent,\n        resolve: [RecipeResolverService],\n      },\n      {\n        path: ':id',\n        component: RecipeDetailsComponent,\n        resolve: [RecipeResolverService],\n      },\n    ],\n  },\n  { path: 'shopping-list', component: ShoppingListComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport {\n  FormGroup,\n  FormControl,\n  FormArray,\n  Validators,\n  Form,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { RecipeService } from '../recipe.service';\nimport { Recipe } from '../recipe.model';\n\n@Component({\n  selector: 'app-recipe-edit',\n  templateUrl: './recipe-edit.component.html',\n  styleUrls: ['./recipe-edit.component.css'],\n})\nexport class RecipeEditComponent implements OnInit {\n  id: number;\n  editMode: boolean = false;\n\n  recipeForm: FormGroup;\n\n  constructor(\n    private route: ActivatedRoute,\n    private recipeService: RecipeService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params: Params) => {\n      this.id = +params['id'];\n      this.editMode = params['id'] != null;\n\n      this.initForm();\n    });\n  }\n\n  private initForm() {\n    let recipeName = '';\n    let recipeDescription = '';\n    let recipeImagePath = '';\n    let recipeIngredients = new FormArray([]);\n\n    if (this.editMode) {\n      const recipe = this.recipeService.getRecipe(this.id);\n      recipeName = recipe.name;\n      recipeDescription = recipe.description;\n      recipeImagePath = recipe.imagePath;\n      if (recipe['ingredients']) {\n        for (let ingredient of recipe.ingredients) {\n          recipeIngredients.push(\n            new FormGroup({\n              name: new FormControl(ingredient.name, Validators.required),\n              amount: new FormControl(ingredient.amount, [\n                Validators.required,\n                Validators.pattern(/^[1-9]+[0-9]*$/),\n              ]),\n            })\n          );\n        }\n      }\n    }\n\n    this.recipeForm = new FormGroup({\n      name: new FormControl(recipeName, Validators.required),\n      imagePath: new FormControl(recipeImagePath, Validators.required),\n      description: new FormControl(recipeDescription, Validators.required),\n      ingredients: recipeIngredients,\n    });\n  }\n\n  getIngredientControls() {\n    return (<FormArray>this.recipeForm.get('ingredients')).controls;\n  }\n\n  onSubmit() {\n    const newRecipe = new Recipe(\n      this.recipeForm.value['name'],\n      this.recipeForm.value['description'],\n      this.recipeForm.value['imagePath'],\n      this.recipeForm.value['ingredients']\n    );\n    if (this.editMode) {\n      this.recipeService.updateRecipe(this.id, this.recipeForm.value);\n    } else {\n      this.recipeService.addRecipe(newRecipe);\n    }\n    this.onCancel();\n  }\n\n  onAddIngredient() {\n    (<FormArray>this.recipeForm.get('ingredients')).push(\n      new FormGroup({\n        name: new FormControl(null, Validators.required),\n        amount: new FormControl(null, [\n          Validators.required,\n          Validators.pattern(/^[1-9]+[0-9]*$/),\n        ]),\n      })\n    );\n  }\n\n  onCancel() {\n    this.router.navigate(['../'], { relativeTo: this.route });\n  }\n\n  onDeleteIngredient(index: number) {\n    const currRecipeIngs = this.recipeForm.get('ingredients');\n    (<FormArray>currRecipeIngs).removeAt(index);\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <form [formGroup]=\"recipeForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-success\"\n            [disabled]=\"!recipeForm.valid\"\n            style=\"margin-right: 1rem\">\n            Save\n          </button>\n          <button type=\"button\" class=\"btn btn-danger\" (click)=\"onCancel()\">Cancel</button>\n        </div>\n      </div>\n      <hr />\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <div class=\"form-group\">\n            <label for=\"name\">Name</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              class=\"form-control\"\n              formControlName=\"name\"\n              />\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <div class=\"form-group\">\n            <label for=\"imagePath\">Image URL</label>\n            <input\n              type=\"text\"\n              id=\"imagePath\"\n              class=\"form-control\"\n              formControlName=\"imagePath\"\n              #imgPath\n              />\n            <div class=\"row\">\n              <div class=\"col-xs-12\">\n                <img [src]=\"imgPath.value\" class=\"img-responsive\" />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <img src=\"\" class=\"img-responsive\" />\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <div class=\"form-group\">\n            <label for=\"description\">Description</label>\n            <textarea\n              type=\"text\"\n              id=\"description\"\n              class=\"form-control\"\n              rows=\"6\"\n              formControlName=\"description\"></textarea>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\" formArrayName=\"ingredients\">\n          <div\n            class=\"row\"\n            *ngFor=\"let ingredientCtrl of getIngredientControls();\n            let i= index\" [formGroupName]=\"i\"\n            style=\"margin-top: 10px\">\n            <div class=\"col-xs-8\">\n              <input type=\"text\" class=\"form-control\" formControlName=\"name\" />\n            </div>\n            <div class=\"col-xs-2\">\n              <input\n                type=\"number\"\n                class=\"form-control\"\n                formControlName=\"amount\"\n                />\n            </div>\n            <div class=\"col-xs-2\">\n              <button\n                type=\"button\"\n                class=\"btn btn-danger\"\n                (click)=\"onDeleteIngredient(i)\">X</button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <hr />\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <button\n            type=\"button\"\n            class=\"btn btn-success\"\n            (click)=\"onAddIngredient()\">\n            Add ingredient\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}